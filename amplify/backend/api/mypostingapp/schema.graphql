type Profile @model {
    id: ID!
    username: String!
    nickname: String!
    profileImage: String
    backgroundImage: String
    likes: [Like] @connection(keyName: "byProfile", fields: ["id"])
    comments: [Comment] @connection(keyName: "byProfile", fields: ["id"])
    posts: [Post] @connection(keyName: "byProfile", fields: ["id"])
}

type Post @model @key(name: "byProfile", fields: ["profileID"]) {
    id: ID!
    title: String!
    status: PostStatus!
    date: String!
    profileID: ID!
    contents: String
    image: String
    profile: Profile @connection(fields: ["profileID"])
    comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
    likes: [Like] @connection(keyName: "byPost", fields: ["id"])
}

type PostPermission @model {
    username: String!
    permission: Boolean!
}

type Comment @model @key(name: ["byPost", "byProfile"], fields: ["postID", "profileID"]) {
    id: ID!
    username: String!
    postID: ID!
    post: Post @connection(fields: ["postID"])
    profileID: ID!
    profile: Profile @connection(fields: ["profileID"])
    content: String!
}

type Like @model @key(name: ["byPost", "byProfile"], fields: ["postID", "ProfileID"]) {
    id: ID!
    postID: ID!
    post: Post @connection(fields: ["postID"])
    ProfileID: ID!
    profile: Profile @connection(fields: ["ProfileID"])
}

enum PostStatus {
    DRAFT
    PUBLISHED
}
